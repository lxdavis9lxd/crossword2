Implement client-side logging to Passenger log in cPanel environment

This commit implements a robust client-side logging system that routes console logs from scripts.js to the Passenger log file in cPanel, making it easier to debug issues like the load puzzles button functionality.

Changes:
- Added `logToServer()` function to scripts.js that sends logs to a server endpoint
- Created a new `/v1/api/log` endpoint in routes/api.js that writes logs to both console and file
- Replaced all console.log calls with logToServer() in scripts.js
- Added errorlogger.js for capturing and logging client-side errors
- Created check_logs.sh utility script to easily view log files
- Added test-logging.html page to verify the logging system
- Updated view templates to include the error logger
- Created LOGGING_TEST_GUIDE.md with instructions for testing in cPanel

The logging system works by sending HTTP requests from the client to the server with log messages and contextual data. In production environments (like cPanel), these logs are written to both the console (which Passenger captures) and a dedicated log file in the logs directory.

This enhancement will make it much easier to debug issues with the load puzzles button functionality by providing detailed logs of fetch requests, responses, and any errors that occur in the cPanel environment.
