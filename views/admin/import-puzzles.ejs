<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Import Puzzles - Admin</title>
    <link rel="stylesheet" href="/v1/styles.css">
    <link rel="stylesheet" href="/admin-styles-modern.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="admin-body">
    <header class="admin-header">
        <h1>Import Puzzles</h1>
        <nav>
            <ul>
                <li><a href="/v1/admin">Dashboard</a></li>
                <li><a href="/v1/admin/users">Users</a></li>
                <li><a href="/v1/admin/puzzles">Puzzles</a></li>
                <li><a href="/v1/admin/import-puzzles" class="active">Import Puzzles</a></li>
                <li><a href="/v1/game/dashboard">Game Dashboard</a></li>
                <li><a href="/v1/auth/logout">Logout</a></li>
            </ul>
        </nav>
    </header>
    
    <main class="admin-main">
        <section class="admin-controls">
            <div class="controls-left">
                <h2>Import Puzzles from Excel</h2>
            </div>
            <div class="controls-right">
                <a href="/v1/admin/puzzle-template" class="admin-button secondary">Download Template</a>
            </div>
        </section>
        
        <section class="admin-content">
            <div class="import-instructions">
                <h3>Instructions</h3>
                <ol>
                    <li>Download the Excel template using the button above.</li>
                    <li>Fill in the template with your puzzle data. Required fields are:
                        <ul>
                            <li><strong>level</strong> - Must be one of: easy, intermediate, or advanced</li>
                            <li><strong>grid</strong> - The puzzle grid as a JSON array</li>
                            <li><strong>clues_across</strong> - The across clues as a JSON array of objects with number and clue properties</li>
                            <li><strong>clues_down</strong> - The down clues as a JSON array of objects with number and clue properties</li>
                        </ul>
                    </li>
                    <li>Optional fields include:
                        <ul>
                            <li><strong>title</strong> - The puzzle title</li>
                            <li><strong>description</strong> - A description of the puzzle</li>
                            <li><strong>difficulty_rating</strong> - A number from 1-5 indicating difficulty</li>
                        </ul>
                    </li>
                    <li>Upload your completed Excel file using the form below.</li>
                </ol>
            </div>
            
            <% if (typeof error !== 'undefined') { %>
                <div class="error-message">
                    <%= error %>
                </div>
            <% } %>
            
            <div class="import-form">
                <form action="/v1/admin/import-puzzles" method="POST" enctype="multipart/form-data">
                    <div class="file-upload">
                        <label for="puzzleFile">Select Excel File (.xlsx or .xls)</label>
                        <div class="file-input-wrapper">
                            <div class="file-input-button" id="fileInputButton">
                                <i class="file-icon">ðŸ“„</i>
                                <span>Click to select an Excel file (.xlsx or .xls) or drag and drop</span>
                            </div>
                            <input type="file" id="puzzleFile" name="puzzleFile" class="file-input" accept=".xlsx,.xls" required>
                        </div>
                        <div class="selected-file" id="selectedFile"></div>
                        <div class="file-format-hint">
                            <small>Only Excel files (.xlsx or .xls) are supported</small>
                            <small class="tip">Troubleshooting tips: 
                                <ul>
                                    <li>If upload fails, try saving as .xlsx instead of .xls or vice versa</li>
                                    <li>Make sure your Excel file follows the required format shown in the examples below</li>
                                    <li>You can download a template from the button at the bottom of this page</li>
                                </ul>
                            </small>
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <a href="/v1/admin/puzzles" class="admin-button secondary">Cancel</a>
                        <button type="submit" class="admin-button primary">Upload and Import</button>
                    </div>
                </form>
            </div>
            
            <div class="import-help">
                <h3>JSON Format Examples</h3>
                <div class="code-example">
                    <h4>Grid Example</h4>
                    <pre><code>["A","B","C","D",".","E","F","G","H","I",".","J","K","L","M","N"]</code></pre>
                    <p>The grid is a flat array of letters or "." for black cells.</p>
                </div>
                
                <div class="code-example">
                    <h4>Clues Example</h4>
                    <pre><code>[
  {"number": 1, "clue": "Small battery"},
  {"number": 3, "clue": "Mountain range"},
  {"number": 7, "clue": "Writing implement"}
]</code></pre>
                </div>
            </div>
        </section>
    </main>
    
    <footer class="admin-footer">
        <p>&copy; <%= new Date().getFullYear() %> Crossword Game Administration</p>
    </footer>
    
    <style>
        .import-instructions {
            background-color: var(--card-bg);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            margin-bottom: 2rem;
            box-shadow: var(--box-shadow);
        }
        
        .import-instructions ol {
            padding-left: 1.5rem;
        }
        
        .import-instructions li {
            margin-bottom: 0.75rem;
        }
        
        .import-instructions ul {
            margin-top: 0.5rem;
            padding-left: 1.5rem;
        }
        
        .import-form {
            background-color: var(--card-bg);
            padding: 2rem;
            border-radius: var(--border-radius);
            margin-bottom: 2rem;
            box-shadow: var(--box-shadow);
            border: 1px solid rgba(0,0,0,0.05);
        }
        
        .file-input-wrapper {
            position: relative;
            margin: 1rem 0;
        }
        
        .file-input-button {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2.5rem 1rem;
            border: 2px dashed var(--primary-light);
            border-radius: var(--border-radius);
            background-color: rgba(58, 134, 255, 0.05);
            cursor: pointer;
            transition: var(--transition);
            text-align: center;
        }
        
        .file-input-button:hover, .file-input-button.highlight {
            background-color: rgba(58, 134, 255, 0.1);
            border-color: var(--primary-color);
        }
        
        .file-input-button.file-selected {
            border-style: solid;
            background-color: rgba(58, 134, 255, 0.1);
        }
        
        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }
        
        .selected-file {
            margin-top: 0.5rem;
            color: var(--primary-color);
            font-weight: 500;
        }
        
        .file-format-hint {
            margin-top: 0.5rem;
            color: #666;
            font-size: 0.9rem;
        }
        
        .file-format-hint ul {
            background-color: rgba(0,0,0,0.02);
            padding: 1rem 1rem 1rem 2.5rem;
            border-radius: var(--border-radius);
            margin-top: 0.5rem;
        }
        
        .file-format-hint li {
            margin-bottom: 0.5rem;
        }
        
        .file-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }
        
        .import-help {
            background-color: var(--card-bg);
            padding: 1.5rem;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            margin-top: 2rem;
        }
        
        .code-example {
            margin-bottom: 1.5rem;
        }
        
        .code-example h4 {
            color: var(--primary-color);
            margin-bottom: 0.75rem;
        }
        
        .code-example pre {
            background-color: #f5f7fa;
            padding: 1rem;
            border-radius: var(--border-radius);
            overflow-x: auto;
            font-family: 'Consolas', 'Monaco', monospace;
            margin: 0.5rem 0;
            border: 1px solid rgba(0,0,0,0.05);
        }
        
        .code-example p {
            font-size: 0.9rem;
            color: #666;
            margin-top: 0.5rem;
        }
        
        .error-message {
            background-color: #ffebee;
            border-left: 4px solid var(--danger-color);
            color: var(--danger-color);
            padding: 1rem;
            margin-bottom: 1.5rem;
            border-radius: var(--border-radius);
        }
    </style>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fileInput = document.getElementById('puzzleFile');
            const fileInputButton = document.getElementById('fileInputButton');
            const selectedFile = document.getElementById('selectedFile');
            
            // Handle file selection
            fileInput.addEventListener('change', function(e) {
                if (fileInput.files.length > 0) {
                    selectedFile.textContent = `Selected file: ${fileInput.files[0].name}`;
                    fileInputButton.classList.add('file-selected');
                } else {
                    selectedFile.textContent = '';
                    fileInputButton.classList.remove('file-selected');
                }
            });
            
            // Handle drag and drop
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                fileInputButton.addEventListener(eventName, preventDefaults, false);
            });
            
            function preventDefaults(e) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            ['dragenter', 'dragover'].forEach(eventName => {
                fileInputButton.addEventListener(eventName, highlight, false);
            });
            
            ['dragleave', 'drop'].forEach(eventName => {
                fileInputButton.addEventListener(eventName, unhighlight, false);
            });
            
            function highlight() {
                fileInputButton.classList.add('highlight');
            }
            
            function unhighlight() {
                fileInputButton.classList.remove('highlight');
            }
            
            fileInputButton.addEventListener('drop', handleDrop, false);
            
            function handleDrop(e) {
                const dt = e.dataTransfer;
                const files = dt.files;
                fileInput.files = files;
                
                // Trigger change event
                const event = new Event('change');
                fileInput.dispatchEvent(event);
            }
        });
    </script>
</body>
</html>
