Server is running on port 3000
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Users';
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_2`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Puzzles';
Executing (default): PRAGMA INDEX_LIST(`Puzzles`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Achievements';
Executing (default): PRAGMA INDEX_LIST(`Achievements`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='UserAchievements';
Executing (default): PRAGMA INDEX_LIST(`UserAchievements`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserAchievements_1`)
Database synced successfully.
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Executing (default): SELECT `id`, `username`, `email`, `role`, `isActive`, `createdAt` FROM `Users` AS `User`;
Executing (default): SELECT `id`, `title`, `level`, `difficultyRating`, `createdAt` FROM `Puzzles` AS `Puzzle`;
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Executing (default): SELECT `id`, `username`, `email`, `role`, `isActive`, `createdAt` FROM `Users` AS `User`;
Executing (default): SELECT `id`, `title`, `level`, `difficultyRating`, `createdAt` FROM `Puzzles` AS `Puzzle`;
