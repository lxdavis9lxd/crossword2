Server is running on port 3000
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Users';
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_2`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Puzzles';
Executing (default): PRAGMA INDEX_LIST(`Puzzles`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Achievements';
Executing (default): PRAGMA INDEX_LIST(`Achievements`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='UserAchievements';
Executing (default): PRAGMA INDEX_LIST(`UserAchievements`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserAchievements_1`)
Database synced successfully.
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Executing (default): SELECT `id`, `username`, `email`, `role`, `isActive`, `createdAt` FROM `Users` AS `User`;
Executing (default): SELECT `id`, `title`, `level`, `difficultyRating`, `createdAt` FROM `Puzzles` AS `Puzzle`;
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '13';
Raw progress from user model: {}
User ID: 13
Progress type: object
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Login attempt: { emailOrUsername: 'testuser' }
Looking for user with email/username: testuser
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'testuser' OR `User`.`username` = 'testuser') LIMIT 1;
User found: { id: 14, username: 'testuser', role: 'user' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 14,
  username: 'testuser',
  email: 'testuser@example.com',
  role: 'user'
}
Redirecting to dashboard...
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Executing (default): SELECT `id`, `username`, `email`, `role`, `isActive`, `createdAt` FROM `Users` AS `User`;
Executing (default): SELECT `id`, `title`, `level`, `difficultyRating`, `createdAt` FROM `Puzzles` AS `Puzzle`;
Login attempt: { emailOrUsername: 'admin' }
Looking for user with email/username: admin
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'admin' OR `User`.`username` = 'admin') LIMIT 1;
User found: { id: 13, username: 'admin', role: 'admin' }
Comparing passwords...
Password match: true
Setting user session...
Session set: {
  id: 13,
  username: 'admin',
  email: 'admin@example.com',
  role: 'admin'
}
Redirecting to dashboard...
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '13';
Raw progress from user model: {}
User ID: 13
Progress type: object
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '13';
Raw progress from user model: {}
User ID: 13
Progress type: object
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Executing (default): SELECT `id`, `username`, `email`, `role`, `isActive`, `createdAt` FROM `Users` AS `User`;
Executing (default): SELECT `id`, `title`, `level`, `difficultyRating`, `createdAt` FROM `Puzzles` AS `Puzzle`;
Error: Only Excel files are allowed
    at fileFilter (/workspaces/crossword2/routes/admin.js:38:10)
    at wrappedFileFilter (/workspaces/crossword2/node_modules/multer/index.js:44:7)
    at Multipart.<anonymous> (/workspaces/crossword2/node_modules/multer/lib/make-middleware.js:121:7)
    at Multipart.emit (node:events:524:28)
    at HeaderParser.cb (/workspaces/crossword2/node_modules/busboy/lib/types/multipart.js:358:14)
    at HeaderParser.push (/workspaces/crossword2/node_modules/busboy/lib/types/multipart.js:162:20)
    at SBMH.ssCb [as _cb] (/workspaces/crossword2/node_modules/busboy/lib/types/multipart.js:394:37)
    at feed (/workspaces/crossword2/node_modules/streamsearch/lib/sbmh.js:248:10)
    at SBMH.push (/workspaces/crossword2/node_modules/streamsearch/lib/sbmh.js:104:16)
    at Multipart._write (/workspaces/crossword2/node_modules/busboy/lib/types/multipart.js:567:19)
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User`;
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle`;
Executing (default): SELECT count(*) AS `count` FROM `Users` AS `User` WHERE `User`.`role` = 'admin';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'intermediate';
Executing (default): SELECT count(*) AS `count` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'advanced';
Login attempt: { emailOrUsername: 'pdavis' }
Looking for user with email/username: pdavis
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE (`User`.`email` = 'pdavis' OR `User`.`username` = 'pdavis') LIMIT 1;
User found: { id: 2, username: 'pdavis', role: 'user' }
Comparing passwords...
Password match: true
Setting user session...
Session set: { id: 2, username: 'pdavis', email: 'pdavis@gmail.com', role: 'user' }
Redirecting to dashboard...
Executing (default): SELECT `id`, `username`, `email`, `password`, `role`, `isActive`, `progress`, `completedPuzzles`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = '2';
Raw progress from user model: {
  '1': {
    '0': 'C',
    '1': 'A',
    '2': 'T',
    '4': 'O',
    '6': 'O',
    '8': 'W',
    '9': 'O',
    '10': 'R',
    '11': 'D',
    '14': 'Y',
    lastPlayed: '2025-05-19T19:18:12.821Z'
  }
}
User ID: 2
Progress type: object
Executing (default): SELECT `id`, `level`, `title`, `description`, `difficultyRating`, `puzzleData`, `createdAt`, `updatedAt` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`id` = '1';
Executing (default): SELECT `id`, `level`, `title`, `description`, `difficultyRating`, `puzzleData`, `createdAt`, `updatedAt` FROM `Puzzles` AS `Puzzle` WHERE `Puzzle`.`level` = 'easy';
